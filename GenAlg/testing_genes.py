from NeuralObject import *
gene1 = [[[1.9914033420628656, 85.31931840063895, 3.1333032044271447]], [[82.68553765549699, 24.961532517190104, 43.31423453578772, 50.63909715292558], [-31.601952135652496, -77.93761499905821, -62.71019829023991, 83.7727296327418], [70.01937899624497, 69.15689172820132, 33.83132938790806, -78.92587423324693]], [[63.32385989262455, -34.66524371313596, 5.156779341612166], [20.46584016264683, 25.114991229055867, -81.83765678580721], [-84.9579903507304, 75.34081559089098, 102.3098632325352], [-87.78655311632326, 42.132294065829406, 37.12180705616544]], [[21.736981913784028], [12.992318787716387], [69.3617271488468]]]
gene2 =[[[107.02268511586018, -28.274615432038374, 35.07228723445731]], [[-52.364544962799805, -7.0293133376027015, -13.647651753613008, 1.689277653636655], [16.391129885142426, 67.94608647983742, -41.27858220432216, -102.28124957933052], [-38.24428175019138, 74.28642207121985, 61.32338829991988, 45.9774704527195]], [[78.96861175864393, -57.81631054005701, 5.7725422323011335], [-30.098186516319068, 28.862895606502608, -48.48733891985868], [1.2680634456370785, -35.85307507960555, 89.46020845015076], [79.41902318593486, -37.489090025683055, -27.719936470086605]], [[-60.88952973632187], [92.66136525221432], [34.053505552193904]]]
gene3 = [[[65.424, 18.3, -78.54]], [[-85.625, 67.831, -90.7, 74.675], [-79.959, 84.099, -98.033, 6.779], [-38.91, -16.928, 77.09, 30.788]], [[94.925, 68.913, 75.07], [-8.949, 61.567, -34.232], [26.923, -29.514, 43.075], [23.307, -83.251, 3.387]], [[-85.434], [57.135], [-79.363]]]
gene4 = [[[82.22042438040071, -38.29303341077715, -47.12257350018837]], [[-13.265316929890608, -54.47318677268338, 71.13682839660983, 24.579319358585312], [-82.39204857232073, 13.62290762293193, 2.3626216960628024, 85.21505640416795], [-3.8437166210118177, 64.97551718471375, -37.009328313037614, -58.58696975646638]], [[88.88935193584872, -41.83820713925521, 10.862292578066029], [56.341087195787935, -75.32233653395416, -84.83989147779357], [-53.54442686649688, -9.949783970975897, -10.485010106566332], [93.51900105924555, -49.88232881841653, 14.68114586514462]], [[67.03857657132268], [90.47248596736968], [30.579924497962757]]]
gene5 = [[[30.85638518850569, -71.72890165432541, 72.25440910925963]], [[78.56440909748075, 22.296802038811585, -40.426862095034835, -8.250879465010296], [54.04914052434212, 84.19818578669936, 21.707098066950685, 27.1793590582689], [91.57684441624123, -1.012582460681426, -86.71459023800102, 56.70726485816604]], [[84.57767359158119, -98.22749770592924, 7.864572353276436], [-22.58636996459516, -77.18008600224223, -5.662328280751934], [-39.0752863059324, -51.42263814603639, 4.17449196890444], [84.66169122857897, -37.272879822218734, -102.06918048960901]], [[19.04246894112652], [-57.81638064861994], [-79.87944107303798]]]
gene6 = [[[171.50301973830187, 45.28649270994808, -67.27763535252019]], [[78.15487759195369, 66.02197715310852, 117.98979752462665, 36.74820660852174], [119.06468788786623, 88.33593773995987, -82.10803545010161, 3.9005110094149646], [-33.43039026178971, -28.56023101742411, -29.493186331031442, -87.25260308912966]], [[-49.59602887636161, -60.904055453337065, -90.65791480013773], [-85.97166533575971, 66.39985668160405, -23.60897886605835], [-119.1821823791173, 90.5185910189111, -59.44159766123067], [-20.06387124321822, -15.075099171075898, -99.41528773964843]], [[-60.570426099904296], [-1.765545292966475], [13.946623796646906]]]
gene7 = [[[175.63157639427178, 45.45012660341628, -66.27105692359986]], [[77.32374570447655, 64.02996535116245, 118.0011849361588, 37.4365246827019], [119.96545799978632, 87.46153351639516, -79.231846216672, 3.9506209884903223], [-33.115535655477196, -28.715132945527802, -30.285294111318574, -88.58587474017067]], [[-47.81839620346179, -62.079982460941174, -91.82669711368469], [-84.64176507204095, 67.29875887206349, -24.297212916854047], [-115.77760577535562, 90.34984307856199, -59.285196082519654], [-20.339964378071677, -15.257793190043193, -98.70231534019426]], [[-60.368172551052766], [-1.779901073683329], [14.321852948726438]]]
gene8 = [[[175.63157639427178, 45.45012660341628, -66.27105692359986]], [[77.32374570447655, 64.02996535116245, 118.0011849361588, 37.4365246827019], [119.96545799978632, 87.46153351639516, -79.231846216672, 3.9506209884903223], [-33.115535655477196, -28.715132945527802, -30.285294111318574, -88.58587474017067]], [[-47.81839620346179, -62.079982460941174, -91.82669711368469], [-84.64176507204095, 67.29875887206349, -24.297212916854047], [-115.77760577535562, 90.34984307856199, -59.285196082519654], [-20.339964378071677, -15.257793190043193, -98.70231534019426]], [[-60.368172551052766], [-1.779901073683329], [14.321852948726438]]]

gene_async = [[[12.762824888852409, 22.073560361149028, 109.95536165340675]], [[-63.6937676876426, 113.9427754117642, 90.15003271834307, -66.48351786220526], [-108.42410671263436, -12.205388295234487, 7.34040700708061, 90.1604489753184], [-73.50488581119112, 109.54861601595806, 47.43501584649584, -40.49042169867829]], [[62.82889461530917, 15.166863428804245, -8.849332330710324], [71.54791761682476, -27.763747571041815, -44.704847695660014], [65.24690140891492, 94.68250629973365, -73.65768076152625], [84.90473032283693, 105.32260303910185, -112.76560086293495]], [[-77.24076186344888], [9.347320793900069], [89.93652442423875]]]


genes =[gene1, gene2, gene3, gene4, gene5, gene6, gene7, gene8, gene_async]
range_=10000
# range_ = int(input("range : "))
def check(gene, j):
    after_perc = 0
    NN = NeuralNetwork([1,3,4,3,1], gene, sin_)
    for i in range(50):
        fit = 0
        for _ in range(300):
            i = np.random.randint(1,range_)
            X = NN.forward([i])[0]
            if X and i&1:
                fit +=1
            elif not X and not i&1:
                fit+=1
        after_perc+=fit/3
    print(f"gene-{j+1}  : {after_perc/50}")
# print("range :", range_)
# for i, gene in enumerate(genes):
#     check(gene,i)


# NN = NeuralNetwork([1,3,4,3,1], gene3, sin_)
# while True:
#     x = int(input())
#     y = NN.forward([x])[0]
#     if y&1:
#         print("ODD")
#     else:
#         print("EVEN")

check(gene_async, 9)

